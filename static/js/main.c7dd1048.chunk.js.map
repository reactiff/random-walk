{"version":3,"sources":["App.tsx","../../src/RandomWalk.ts","index.tsx"],"names":["rndWalk","RandomWalk","this","start","Math","max","createTrend","next","trendRem","step","value","App","useState","price","setPrice","useEffect","generatePrice","setTimeout","styles","useMemo","box","border","padding","fontSize","margin","className","style","toFixed","href","ReactDOM","render","document","getElementById"],"mappings":"yQAIMA,EAAU,ICJKC,WAUjB,sBACIC,KAAA,MACAA,KAAA,MACAA,KAAA,WACAA,KAAA,UACAA,KAAA,MAAaC,GAASC,gBAAkBC,EAAD,GAAjBD,GAAtB,EACAF,KAAA,WACAA,KAAA,W,2BAGJI,uBACIJ,KAAA,SAAgBE,WAAWA,gBAA3B,GACAF,KAAA,SAAgBE,cAAgBF,KAAhC,U,EAGJK,gBACQL,KAAKM,UAAT,GACIN,KAAA,cAEJ,IAAMO,EAAOL,cAAgBF,KAA7B,QAkBA,OAjBAA,KAAA,YACAA,KAAA,OAAcO,EAAOP,KAArB,SAGIA,KAAKQ,OAAQR,KAAjB,MACIA,KAAA,cACAA,KAAA,YACAA,KAAA,UAIAA,KAAKQ,OAAQR,KAAjB,MACIA,KAAA,cACAA,KAAA,WACAA,KAAA,UAGGA,KAAP,O,EA/CaD,GDIL,CACd,EACA,IACA,IACA,GACA,IA6DaU,EAtDH,WACV,MAA0BC,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACAC,qBAAU,YACc,SAAhBC,IACJF,EAASd,EAAQO,QACjBU,WAAWD,EAAe,KAE5BA,KACC,CAACF,IAEJ,IAAMI,EAASC,mBAAQ,iBAAO,CAC5BC,IAAK,CACHC,OAAQ,oBACRC,QAAS,IAEXT,MAAO,CACLU,SAAU,OACVC,OAAQ,iBAGR,IAEJ,OACE,6BAGE,yBAAKC,UAAU,4BACb,qDAIA,+HAGA,kBAAC,IAAD,KAtCA,mPAyCA,yBAAKA,UAAU,2BAA2BC,MAAOR,EAAOE,KACtD,wBAAIM,MAAOR,EAAOL,OACfA,EAAMc,QAAQ,IAEjB,6CAIF,2BACE,uBAAGC,KAAK,uDAAR,OADF,MAC0E,uBAAGA,KAAK,2CAAR,OAD1E,eAC4I,uBAAGA,KAAK,+BAAR,kB,qBEtDpJC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.c7dd1048.chunk.js","sourcesContent":["import React, { useEffect, useMemo, useState } from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport RandomWalk from '@reactiff/random-walk'\n\nconst rndWalk = new RandomWalk(\n  1,      // min:         number\n  1000,   // max:         number\n  500,    // start:       number\n  10,     // maxTrend:    number - max number of steps\n  10      // maxStep:     number - max step size \n);\n\nconst md = `\n[![NPM](https://img.shields.io/npm/v/@reactiff/random-walk.svg)](https://www.npmjs.com/package/@reactiff/random-walk) [![JavaScript Style Guide](https://img.shields.io/badge/code_style-standard-brightgreen.svg)](https://standardjs.com)\n`;\n\nconst App = () => {\n  const [price, setPrice] = useState(0);\n  useEffect(() => {\n    const generatePrice = () => {\n      setPrice(rndWalk.next());\n      setTimeout(generatePrice, 200);\n    }\n    generatePrice();\n  }, [setPrice]);\n\n  const styles = useMemo(() => ({\n    box: { \n      border: '4px solid #ffffff',\n      padding: 30,\n    },\n    price: { \n      fontSize: '3rem',\n      margin: '0 0 15px 0',\n\n    },\n  }), []);\n\n  return (\n    <div> \n      \n      \n      <div className=\"flex column align-center\" >\n        <h1>\n          @reactiff/random-walk\n        </h1>\n        \n        <p>\n          Generates random number sequences that are more characteristic of Price Movements i.e. trending.\n        </p>\n        <ReactMarkdown>\n          {md}\n        </ReactMarkdown>\n        <div className=\"flex column align-center\" style={styles.box}>\n          <h1 style={styles.price}>\n            {price.toFixed(2)}\n          </h1>\n          <div>\n            RANDOM WALK\n          </div>\n        </div>\n        <p>\n          <a href=\"https://www.npmjs.com/package/@reactiff/random-walk\">npm</a> | <a href=\"https://github.com/reactiff/random-walk\">git</a> | MIT Â© <a href=\"https://github.com/reactiff\">Rick Ellis</a>\n          \n        </p>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","export default class RandomWalk {\r\n\r\n    min: number;\r\n    max: number;\r\n    maxTrend: number;\r\n    maxStep: number;\r\n    value: number;\r\n    trendRem: number;\r\n    trendDir: number;\r\n\r\n    constructor(min: number, max: number, start: number, maxTrend: number, maxStep: number) {\r\n        this.min = min;\r\n        this.max = max;\r\n        this.maxTrend = maxTrend;\r\n        this.maxStep = maxStep;\r\n        this.value = start || Math.random() * ((max - min)/2) + min;\r\n        this.trendRem = 0;\r\n        this.trendDir = 0;\r\n    }\r\n\r\n    createTrend() {\r\n        this.trendDir = Math.round(Math.random() * 2 - 1); // -1, 0, 1\r\n        this.trendRem = Math.random() * this.maxTrend;\r\n    }\r\n\r\n    next() {\r\n        if (this.trendRem<=0) {\r\n            this.createTrend();\r\n        }\r\n        const step = Math.random() * this.maxStep;\r\n        this.trendRem -= step;\r\n        this.value += step * this.trendDir;\r\n\r\n        //cap at max and reverse trend\r\n        if (this.value >=this.max) {\r\n            this.createTrend();\r\n            this.trendDir = -1;\r\n            this.value -= step;\r\n        }\r\n\r\n        //cap at min and reverse trend\r\n        if (this.value <=this.min) {\r\n            this.createTrend();\r\n            this.trendDir = 1;\r\n            this.value += step;\r\n        }\r\n\r\n        return this.value;\r\n    }\r\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nimport './css/index.css'\nimport './css/flex.css'\nimport './css/orthogonal.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}